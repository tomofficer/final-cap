[{"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/index.js":"1","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/App.js":"2","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/layout/Layout.js":"3","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/layout/Menu.js":"4","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/layout/Routes.js":"5","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/layout/NotFound.js":"6","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/dashboard/Dashboard.js":"7","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/utils/date-time.js":"8","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/utils/api.js":"9","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/layout/ErrorAlert.js":"10","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/utils/format-reservation-date.js":"11","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/NewReservation.js":"12","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/ReservationForm.js":"13","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/dashboard/DashboardButtons.js":"14","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/ListDailyReservations.js":"15","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/ListTables.js":"16","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/TableDetails.js":"17","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/utils/useQuery.js":"18","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/NewTable.js":"19","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/ReservationSearch.js":"20","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/EditReservation.js":"21","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/SeatReservation.js":"22","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/utils/format-reservation-time.js":"23"},{"size":286,"mtime":1641679234219,"results":"24","hashOfConfig":"25"},{"size":333,"mtime":1641679234218,"results":"26","hashOfConfig":"25"},{"size":550,"mtime":1641679234219,"results":"27","hashOfConfig":"25"},{"size":1817,"mtime":1641679234219,"results":"28","hashOfConfig":"25"},{"size":2976,"mtime":1641843377290,"results":"29","hashOfConfig":"25"},{"size":327,"mtime":1641679234219,"results":"30","hashOfConfig":"25"},{"size":2194,"mtime":1641842774587,"results":"31","hashOfConfig":"25"},{"size":2386,"mtime":1641679234219,"results":"32","hashOfConfig":"25"},{"size":3963,"mtime":1641843463034,"results":"33","hashOfConfig":"25"},{"size":486,"mtime":1641679234219,"results":"34","hashOfConfig":"25"},{"size":628,"mtime":1641679234219,"results":"35","hashOfConfig":"25"},{"size":179,"mtime":1641768809002,"results":"36","hashOfConfig":"25"},{"size":6724,"mtime":1641769989112,"results":"37","hashOfConfig":"25"},{"size":1297,"mtime":1641786196132,"results":"38","hashOfConfig":"25"},{"size":1877,"mtime":1641842837639,"results":"39","hashOfConfig":"25"},{"size":654,"mtime":1641841864105,"results":"40","hashOfConfig":"25"},{"size":4072,"mtime":1641841860397,"results":"41","hashOfConfig":"25"},{"size":361,"mtime":1641679234220,"results":"42","hashOfConfig":"25"},{"size":3003,"mtime":1641842696754,"results":"43","hashOfConfig":"25"},{"size":539,"mtime":1641842729831,"results":"44","hashOfConfig":"25"},{"size":8204,"mtime":1641842525998,"results":"45","hashOfConfig":"25"},{"size":558,"mtime":1641842457896,"results":"46","hashOfConfig":"25"},{"size":623,"mtime":1641679234220,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"zbxq6e",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/index.js",[],["99","100"],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/App.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/layout/Layout.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/layout/Menu.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/layout/Routes.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/layout/NotFound.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/dashboard/Dashboard.js",["101"],"import { useState } from 'react';\nimport Scroll from 'react-scroll';\nimport ErrorAlert from '../layout/ErrorAlert';\nimport DashboardButtons from './DashboardButtons';\nimport ListDailyReservations from '../reservations/ListDailyReservations';\nimport ListTables from '../reservations/ListTables';\n\n/**\n * Defines the dashboard page.\n * @param date\n *  the date for which the user wants to view reservations.\n * @returns {JSX.Element}\n */\nfunction Dashboard({\n  date,\n  reservations,\n  reservationsError,\n  loadReservations,\n  tablesError,\n  tables,\n}) {\n  // const [reservations, setReservations] = useState([]);\n  // const [reservationsError, setReservationsError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(date);\n\n  return (\n    <main>\n      <h1 className='pb-3 libreFont'>Dashboard</h1>\n\n      {/* buttons for navigating through the reservation dates */}\n      <DashboardButtons\n        selectedDate={selectedDate}\n        setSelectedDate={setSelectedDate}\n        date={date}\n      />\n\n      {/* <div className=\"d-md-flex m-3\">\n        <br />\n      </div> */}\n\n      {/* {JSON.stringify(reservations)} */}\n      <div className='row'>\n        <div className='column m-5 '>\n          <h3 className='montFont'>Reservations for {date}</h3>\n          <div>\n            {reservations.length === 0 ? (\n              <div className='d-md-flex m-3'>\n                <h3 className='montFont'>No reservations to show</h3>\n              </div>\n            ) : (\n              <ListDailyReservations reservations={reservations} />\n            )}\n          </div>\n        </div>\n        <div className='column m-5'>\n          <h3 className='montFont'>Tables</h3>\n          <div\n            className='tables'\n            style={{\n              position: 'relative',\n              height: '500px',\n              width: '200px',\n              overflow: 'scroll',\n              marginBottom: '100px',\n            }}>\n            <ListTables tables={tables} />\n          </div>\n        </div>\n      </div>\n      <ErrorAlert error={reservationsError} />\n      {/* This error is getting thrown when dashboard is initially loaded. Why? */}\n    </main>\n  );\n}\n\nexport default Dashboard;\n","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/utils/date-time.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/utils/api.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/layout/ErrorAlert.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/utils/format-reservation-date.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/NewReservation.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/ReservationForm.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/dashboard/DashboardButtons.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/ListDailyReservations.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/ListTables.js",["102","103"],"import { Link } from 'react-router-dom';\nimport TableDetails from './TableDetails';\n\nconst ListTables = ({ tables }) => {\n  return (\n    <div>\n      <div className='d-md-flex m-3'></div>\n      <ul>\n        {tables.map((table, index) => {\n          return (\n            <div key={index}>\n              <li key={table.table_id}>Table Name: {table.table_name}</li>\n              <li>Capacity: {table.capacity}</li>\n              <li>\n                {`Status: ${table.reservation_id ? 'Occupied' : 'Available'}`}\n              </li>\n              <hr />\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ListTables;\n","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/TableDetails.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/utils/useQuery.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/NewTable.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/ReservationSearch.js",["104"],"import { useState } from 'react';\n\nconst ReservationSearch = () => {\n  return (\n    <form action='/' method='get' className='mt-5'>\n      <label htmlFor='header-search' className='pr-3'>\n        <span className='visually-hidden'>Search Reservations</span>\n      </label>\n      <input\n        type='text'\n        id='header-search'\n        placeholder='Search phone #'\n        name='s'\n      />\n      <button className='btn btn-dark ml-2' type='submit'>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default ReservationSearch;\n","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/EditReservation.js",["105"],"import { useEffect, useState } from 'react';\nimport {\n  createReservation,\n  getReservationById,\n  updateReservation,\n} from '../utils/api';\nimport formatReservationDate from '../utils/format-reservation-date';\nimport formatReservationTime from '../utils/format-reservation-time';\nimport { useHistory, useParams } from 'react-router-dom';\n// import ErrorAlert from \"../layout/ErrorAlert\";\n\nconst EditReservation = () => {\n  const [errors, setErrors] = useState(null);\n  const history = useHistory();\n  const { reservation_id } = useParams();\n  const [formFields, setFormFields] = useState({\n    first_name: '',\n    last_name: '',\n    mobile_number: '',\n    reservation_date: '',\n    reservation_time: '',\n    people: '',\n  });\n\n  useEffect(() => {\n    getReservationById(reservation_id)\n      .then((reservation) => {\n        formatReservationDate(reservation);\n        formatReservationTime(reservation);\n        setFormFields({\n          first_name: reservation.first_name,\n          last_name: reservation.last_name,\n          mobile_number: reservation.mobile_number,\n          reservation_date: reservation.reservation_date,\n          reservation_time: reservation.reservation_time,\n          people: reservation.people,\n          reservation_id: reservation.reservation_id,\n        });\n      })\n      .catch(setErrors);\n  }, [reservation_id]);\n\n  const validateReservation = () => {\n    const errorsArr = [];\n    const today = new Date();\n    const resDate = new Date(formFields.reservation_date);\n    const resTime = formFields.reservation_time;\n\n    if (resDate < today) {\n      errorsArr.push({ message: 'Please pick a future date' });\n    }\n\n    if (resDate.getDay() === 2) {\n      errorsArr.push({ message: 'The restaraunt is closed on Tuesdays!' });\n    }\n\n    if (resTime < '10:30' || resTime > '17:30') {\n      errorsArr.push({\n        message:\n          'Please select a reservation time between 10:30 AM and 9:30 PM',\n      });\n    }\n\n    setErrors(errorsArr);\n    if (errorsArr.length > 0) {\n      return false;\n    }\n    return true;\n  };\n\n  // const errorList = () => {\n  //   return errors.map((err, index) => <ErrorAlert key={index} error={err} />);\n  // };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const foundErrors = validateReservation(formFields);\n\n    if (!foundErrors.length) {\n      const abortController = new AbortController();\n      updateReservation(formFields, abortController.signal)\n        .then((output) =>\n          history.push(`/dashboard?date=${formFields.reservation_date}`)\n        )\n        .catch(errors);\n      return () => abortController.abort();\n    }\n  }\n\n  function handleCancel() {\n    alert('Are you sure you want to cancel?');\n    history.push(`/dashboard?date=${formFields.reservation_date}`);\n  }\n  return (\n    <div className='bootstrap-iso'>\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='col text-left'>\n            <h2 className='pt-5 libreFont'>Update Reservation</h2>\n          </div>\n          <div className='col mt-5'>\n            <button\n              onClick={handleCancel}\n              className='btn btn-warning'\n              type='button'>\n              <span className='oi oi-circle-x mr-2'></span>\n            </button>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-md-6 col-sm-6 col-xs-12'>\n            <form onSubmit={handleSubmit} method='post'>\n              <div className='form-group'>\n                <label className='control-label requiredField' htmlFor='name'>\n                  First Name\n                  <span className='asteriskField'>*</span>\n                </label>\n                <input\n                  className='form-control'\n                  id='name'\n                  defaultValue={formFields.first_name}\n                  name='name'\n                  type='text'\n                  onChange={(e) =>\n                    setFormFields({ ...formFields, first_name: e.target.value })\n                  }\n                />\n              </div>\n              <div className='form-group '>\n                <label className='control-label requiredField' htmlFor='name1'>\n                  Last Name\n                  <span className='asteriskField'>*</span>\n                </label>\n                <input\n                  className='form-control'\n                  id='name1'\n                  name='name1'\n                  defaultValue={formFields.last_name}\n                  type='text'\n                  onChange={(e) =>\n                    setFormFields({ ...formFields, last_name: e.target.value })\n                  }\n                />\n              </div>\n              <div className='form-group '>\n                <label className='control-label requiredField' htmlFor='tel'>\n                  Telephone #<span className='asteriskField'>*</span>\n                </label>\n                <input\n                  className='form-control'\n                  id='tel'\n                  name='tel'\n                  placeholder='000-000-0000'\n                  defaultValue={formFields.mobile_number}\n                  type='text'\n                  onChange={(e) =>\n                    setFormFields({\n                      ...formFields,\n                      mobile_number: e.target.value,\n                    })\n                  }\n                />\n              </div>\n              <div className='form-group '>\n                <label className='control-label requiredField' htmlFor='date'>\n                  Date\n                  <span className='asteriskField'>*</span>\n                </label>\n                <input\n                  className='form-control'\n                  id='date'\n                  name='date'\n                  placeholder='MM-DD-YYYY'\n                  type='date'\n                  defaultValue={formFields.reservation_date}\n                  onChange={(e) =>\n                    setFormFields({\n                      ...formFields,\n                      reservation_date: e.target.value,\n                    })\n                  }\n                />\n                <i className='fas fa-calendar input-prefix'></i>\n              </div>\n              <div className='form-group'>\n                <label\n                  className='control-label requiredField'\n                  htmlFor='inputMDEx1'>\n                  Time\n                  <span className='asteriskField'>*</span>\n                </label>\n                <input\n                  type='time'\n                  id='inputMDEx1'\n                  className='form-control'\n                  defaultValue={formFields.reservation_time}\n                  onChange={(e) =>\n                    setFormFields({\n                      ...formFields,\n                      reservation_time: e.target.value,\n                    })\n                  }\n                />\n              </div>\n              <div className='form-group '>\n                <label className='control-label requiredField' htmlFor='number'>\n                  Group Size\n                  <span className='asteriskField'>*</span>\n                </label>\n                <input\n                  className='form-control'\n                  id='number'\n                  name='number'\n                  type='number'\n                  defaultValue={formFields.people}\n                  onChange={(e) =>\n                    setFormFields({ ...formFields, people: e.target.value })\n                  }\n                />\n              </div>\n              <div className='form-group'>\n                <div>\n                  <button\n                    className='btn btn-primary mr-4'\n                    name='submit'\n                    type='submit'>\n                    <span className='oi oi-check mr-2'></span>\n                    Submit\n                  </button>\n\n                  <button className='btn btn-danger mr-4'>\n                    <span className='oi oi-trash'></span> Cancel Reservation\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditReservation;\n","/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/reservations/SeatReservation.js",[],"/Users/tomofficer/Desktop/final-capstone/starter-restaurant-reservation/front-end/src/utils/format-reservation-time.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"114","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":14},{"ruleId":"110","severity":1,"message":"115","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":20},{"ruleId":"110","severity":1,"message":"116","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"110","severity":1,"message":"117","line":3,"column":3,"nodeType":"112","messageId":"113","endLine":3,"endColumn":20},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Scroll' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'TableDetails' is defined but never used.","'useState' is defined but never used.","'createReservation' is defined but never used.","no-global-assign","no-unsafe-negation"]